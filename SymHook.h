/////////////////////////////////////////////////////////////////
/// CORRESPONDING TO WINDOWS 1.6.0 BEDROCK DEDICATED SERVER
/////////////////////////////////////////////////////////////////

/*###############################################################
BDS function symbols and RVAs
File generated by BDumper, a rust bds pdb dumper made by Luke7720
###############################################################*/
#pragma once
//?isMovable@PistonBlockActor@@UEAA_NAEAVBlockSource@@@Z
//public: virtual bool __cdecl PistonBlockActor::isMovable(BlockSource&)
constexpr unsigned int MD5_b6c1388f283963e5acff32481e7f4f02 = 0x4db7a0;

//?getFacingDir@PistonBlockActor@@QEAAAEBVBlockPos@@AEAVBlockSource@@@Z
//public: BlockPos const& __cdecl PistonBlockActor::getFacingDir(BlockSource&)
constexpr unsigned int MD5_868fe3634e2f9f387a8990eca6cdac61 = 0x4dbfb0;

//?_checkAttachedBlocks@PistonBlockActor@@AEAA_NAEAVBlockSource@@@Z
//private: bool __cdecl PistonBlockActor::_checkAttachedBlocks(BlockSource&)
constexpr unsigned int MD5_d7a00ac2d9adec414a3662b847fe2d7c = 0x4dc030;

//?_hasBlockAttached@PistonBlockActor@@AEAA_NAEBVBlockPos@@@Z
//private: bool __cdecl PistonBlockActor::_hasBlockAttached(BlockPos const&)
constexpr unsigned int MD5_6f6187f91ebfd7ac5108b1391acfd722 = 0x4dc830;

//?toString@BlockPos@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
//public: std::basic_string<char, std::char_traits<char>, std::allocator<char>> __cdecl BlockPos::toString(void) const
constexpr unsigned int MD5_08038beb99b82fbb46756aa99d94b86f = 0x1b81c0;

//?ZERO@Vec3@@2V1@B
//public: static class Vec3 const Vec3::ZERO
constexpr unsigned int MD5_b0f8f7222be1399ac971e8279640e9a8 = 0x00E68380;

//?get@CompoundTag@@QEBAPEAVTag@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
//public: Tag* __cdecl CompoundTag::get(std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const
constexpr unsigned int MD5_0c73f3dd19f946a13c4db0d2254439c1 = 0xc67e0;

//?contains@CompoundTag@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
//public: bool __cdecl CompoundTag::contains(std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const
constexpr unsigned int MD5_59e84462e9a91dabb01f047ba16581af = 0xc6870;

//?getByte@CompoundTag@@QEBAEAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
//public: unsigned char __cdecl CompoundTag::getByte(std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const
constexpr unsigned int MD5_9edfebb9c49f6d22a188907f41df96c3 = 0xc6900;

//?getShort@CompoundTag@@QEBAFAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
//public: short __cdecl CompoundTag::getShort(std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const
constexpr unsigned int MD5_32f915d5bf2c21b58752eca29f0f7cef = 0xc6950;

//?getInt@CompoundTag@@QEBAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
//public: int __cdecl CompoundTag::getInt(std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const
constexpr unsigned int MD5_ec9405f3d741fcab6655c8a467b30219 = 0xc69a0;

//?getFloat@CompoundTag@@QEBAMAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
//public: float __cdecl CompoundTag::getFloat(std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const
constexpr unsigned int MD5_0550bc93763268e5bc9a6c7288a25ea8 = 0xc6a40;

//?getString@CompoundTag@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@@Z
//public: std::basic_string<char, std::char_traits<char>, std::allocator<char>> const& __cdecl CompoundTag::getString(std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const
constexpr unsigned int MD5_088c5a63ef43d3b3950c9b32c61ec319 = 0xc6aa0;

//?getByteArray@CompoundTag@@QEBAAEBUTagMemoryChunk@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
//public: TagMemoryChunk const& __cdecl CompoundTag::getByteArray(std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const
constexpr unsigned int MD5_d44a12dad4242525ac01b30074db932e = 0xc6b00;

//?getList@CompoundTag@@QEBAPEBVListTag@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
//public: ListTag const* __cdecl CompoundTag::getList(std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const
constexpr unsigned int MD5_613d2fddd1acb2b3f0a1cf2fbfd990ff = 0xc6bf0;

//?getCompound@CompoundTag@@QEBAPEBV1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
//public: CompoundTag const* __cdecl CompoundTag::getCompound(std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const
constexpr unsigned int MD5_a38daf462f5bd5fc95192bec8855eee6 = 0xc6ba0;

//?remove@CompoundTag@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
//public: void __cdecl CompoundTag::remove(std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)
constexpr unsigned int MD5_c5151401dbb05dd32c802d0d31cc8a32 = 0xc7440;

//?getRepairCost@BlockActor@@UEBAHXZ
//public: virtual int __cdecl BlockActor::getRepairCost(void) const
constexpr unsigned int MD5_cba19bdd9ee779b7dd2e6ada25683c8d = 0x4ba630;

//?getCustomName@BlockActor@@UEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
//public: virtual std::basic_string<char, std::char_traits<char>, std::allocator<char>> const& __cdecl BlockActor::getCustomName(void) const
constexpr unsigned int MD5_5d96cf82ce5f44eef4e2217972440f16 = 0x4ba4d0;

//?isMovable@BlockActor@@UEAA_NAEAVBlockSource@@@Z
//public: virtual bool __cdecl BlockActor::isMovable(BlockSource&)
constexpr unsigned int MD5_acf0aa2384d9618f8aa1af9f08105b1c = 0x4ba0d0;

//?isCustomNameSaved@BlockActor@@UEAA_NXZ
//public: virtual bool __cdecl BlockActor::isCustomNameSaved(void)
constexpr unsigned int MD5_3f10a28bb6ade8d75ae77441093f9335 = 0x4ba0e0;

//?shouldTick@BlockLegacy@@UEBA_NXZ
//public: virtual bool __cdecl BlockLegacy::shouldTick(void) const
constexpr unsigned int MD5_e9ae7a92708b0d37aaa9bbe13c30e362 = 0x486260;

//?canContainLiquid@BlockLegacy@@UEBA_NXZ
//public: virtual bool __cdecl BlockLegacy::canContainLiquid(void) const
constexpr unsigned int MD5_9c40a8978dc6608c8b914d81ab4df17a = 0x48f7c0;

//?setExplodeable@BlockLegacy@@UEAAAEAV1@M@Z
//public: virtual BlockLegacy& __cdecl BlockLegacy::setExplodeable(float)
constexpr unsigned int MD5_50b6adeb3bb64b27b2b613582e2832bb = 0x48fd80;

//?setDestroyTime@BlockLegacy@@UEAAAEAV1@M@Z
//public: virtual BlockLegacy& __cdecl BlockLegacy::setDestroyTime(float)
constexpr unsigned int MD5_3777fa572ad04b63dd5287b4f4d49fd3 = 0x48fda0;

//?setFriction@BlockLegacy@@UEAAAEAV1@M@Z
//public: virtual BlockLegacy& __cdecl BlockLegacy::setFriction(float)
constexpr unsigned int MD5_1d60afb5a9247c9ea06846f23ebdd89e = 0x48fdd0;

//?resetBitsUsed@BlockLegacy@@UEAAAEAV1@XZ
//public: virtual BlockLegacy& __cdecl BlockLegacy::resetBitsUsed(void)
constexpr unsigned int MD5_51f0b2064925b4a78eda857c6d99858b = 0x48ff80;

//?setAllowsRunes@BlockLegacy@@UEAAAEAV1@_N@Z
//public: virtual BlockLegacy& __cdecl BlockLegacy::setAllowsRunes(bool)
constexpr unsigned int MD5_4c35ac1033c72bb0295b4b9249d20af8 = 0x48ff90;

//?canBeUsedInCommands@BlockLegacy@@UEBA_N_N@Z
//public: virtual bool __cdecl BlockLegacy::canBeUsedInCommands(bool) const
constexpr unsigned int MD5_dc48e633628d9cc1e627c0e92cd364a3 = 0x48ffa0;

//?getThickness@BlockLegacy@@UEBAMXZ
//public: virtual float __cdecl BlockLegacy::getThickness(void) const
constexpr unsigned int MD5_6ffc1124b5ab13a24d9b4501d9436514 = 0x490710;